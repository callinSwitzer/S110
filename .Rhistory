flPairs <- matrix(0, nrow = 100, ncol = 2)
for(i in 1:(length(flips) -2)){
flPairs[i,] <- c(flips[i], flips[i + 1])
}
flPairs
dat <- paste(flPairs[,1], flPairs[,2], sep = "")
lengths <- grep("HH", x = dat) + 1
lengths[1]
}
mean(replicate(10000, fh()))
flips <- sample(c("H", "T"), size = 100, replace = TRUE)
which(x = flips == "H")
min(which(x = flips == "H"))
firstHeads <- funciton(o){
flips <- sample(c("H", "T"), size = 100, replace = TRUE)
min(which(x = flips == "H"))
}
firstHeads <- funciton(o){
flips <- sample(c("H", "T"), size = 100, replace = TRUE)
min(which(x = flips == "H"))
}
mean(replicate(100000, firstHeads))
firstHeads <- function(o){
flips <- sample(c("H", "T"), size = 100, replace = TRUE)
min(which(x = flips == "H"))
}
mean(replicate(100000, firstHeads))
flips <- sample(c("H", "T"), size = 100, replace = TRUE)
min(which(x = flips == "H"))
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
firstHeads()
mean(replicate(100000, firstHeads()))
mu <- rnorm(n = 10000, mean = 100, sd = 15)
hist(mu)
mu1 <- (rnorm(10000, 0, 1) + 100)*5
hist(mu1)
mu1 <- (rnorm(10000, 0, 1)*15 + 100)
hist(mu1)
mu <- rnorm(n = 10000, mean = 100, sd = 15)
hist(mu)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- rnorm(n = 10)
sd(x)
x <- function(n){
mean(rnorm(n = n))
}
sd(x(10))
x(10)
x <- function(n){
sd(rnorm(n = n))
}
x(10)
foo <- mean(replicate(10000, x(10)))
foo
foo <- mean(replicate(10000, x(100)))
foo
foo <- mean(replicate(10000, x(1000)))
foo
foo <- function(nn){
mean(replicate(10000, x(nn)))
}
foo
foo(10)
log(1:10)
exp(1:10)
foo.vec <- Vectorize(foo)
foo.vec(c(10, 20))
sd <- foo.vec(c(10, 20, 30, 100, 1000))
sds <- foo.vec(c(10, 20, 30, 100, 1000))
foo.vec <- Vectorize(foo)
nums <- c(10, 20, 30, 100, 1000)
sds <- foo.vec(nums)
plot(sds~nums)
nums <- c(exp(1:10))
nums
sds <- foo.vec(nums)
nums <- floor(c(exp(1:10)))
nums
sds <- foo.vec(nums)
plot(sds~nums)
nums <- floor(c((1:10)*15))
sds <- foo.vec(nums)
plot(sds~nums)
nums <- floor(c((1:10)*15))
nums
sds <- foo.vec(nums)
plot(sds~nums)
foo <- function(nn){
mean(replicate(100000, x(nn)))
}
foo.vec <- Vectorize(foo)
nums <- floor(c((1:10)*15))
sds <- foo.vec(nums)
plot(sds~nums)
plot(sds~nums, xlim = c(0.90, 1))
plot(sds~nums, ylim = c(0.90, 1))
plot(sds~nums, ylim = c(0.98, 1))
abline(h = 1, lty = 3)
label("bottomright", legend = "true sd", lty = 3)
label("bottomright", label = "true sd", lty = 3)
legend("bottomright", legend = "true sd", lty = 3)
plot(sds~nums, ylim = c(0.98, 1), xlab = "Number of samples", ylab = "Estimated SD")
abline(h = 1, lty = 3)
legend("bottomright", legend = "true sd", lty = 3)
plot(sds~nums, ylim = c(0.98, 1),
xlab = "Number of samples", ylab = "Estimated SD", pch = 19)
abline(h = 1, lty = 3)
legend("bottomright", legend = "true sd", lty = 3)
pnorm(16, mean = 18, sqrt(12*0.3^2))
pnorm(16, mean = 18, sqrt(12*0.3^2), lower.tail = T)
pnorm(16, mean = 18, sqrt(12*0.3^2), lower.tail = F)
rgamma(12, shape = 400/9, rate = 200/9)
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
sum(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 400/9, rate = 200/9))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
mean(rgamma(12, shape = 100/3, rate = 50/3))
(rgamma(12, shape = 100/3, rate = 50/3))
(rgamma(12, shape = 100/3, rate = 50/3))
(rgamma(12, shape = 100/3, rate = 50/3))
(rgamma(12, shape = 100/3, rate = 50/3))
(rgamma(12, shape = 100/3, rate = 50/3))
foo <- replicate(10000, function(o) mean(rgamma(12, shape = 100/3, rate = 50/3)))
mean(foo)
head(foo)
foo <- replicate(10000, mean(rgamma(12, shape = 100/3, rate = 50/3)))
head(foo)
mean(foo)
foo <- replicate(10000, mean(rgamma(12, shape = 75/3, rate = 50/3)))
mean(foo)
hist(foo)
foo <- replicate(10000, sum(rgamma(12, shape = 75/3, rate = 50/3)))
mean(foo)
hist(foo)
sum(foo >= 16) / length(foo)
pgamma(q = 16, shape = 12*(75/3), rate = 12*(50/3), lower.tail = F)
hist(rgamma(n = 1000, shape = 12*(75/3), rate = 12*(50/3)))
18/(0.3^2*12)
12*(50/3)
hist(rgamma(n = 1000, shape = 18*18/(0.3^2*12), rate = 18/(0.3^2*12)))
hist(rgamma(n = 10000, shape = 18*18/(0.3^2*12), rate = 18/(0.3^2*12)))
pgamma(q = 16, shape = 18*18/(0.3^2*12), rate = 18/(0.3^2*12), lower.tail = F)
hist(rgamma(n = 10000, shape = 100, rate = 18/(0.3^2*12)))
hist(rgamma(n = 10000, shape = 1000, rate = 18/(0.3^2*12)))
hist(rgamma(n = 10000, shape = 1000, rate = 1))
hist(rgamma(n = 10000, shape = 1000, rate = 2))
gg <- rgamma(n = 10000, shape = 1000, rate = 2)
hist(gg)
mean(gg)
gg <- rgamma(n = 10000, shape = 1000, rate = 3)
hist(gg)
mean(gg)
gg <- rgamma(n = 10000, shape = 1000, rate = 4)
hist(gg)
mean(gg)
var(gg)
1000/4^2
foo <- rbinom(1000, 10, prob = 1/2 )
hist(foo)
n = 10
p = 1/2
foo <- rbinom(1000, n, prob = p )
hist(foo)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(dat), to = max(dat), length = 100), mean = n*p, sd = sqrt((1-p)*n*p)))
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
hist(foo, freq = F)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
n = 10
p = 1/2
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
hist(foo, freq = F, breaks = 10)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
hist(foo, freq = F, breaks = 100)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
hist(foo, freq = F, breaks = 10)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
lines(density(foo, kernel = 5), col = "red")
lines(density(foo), col = "red")
hist(foo, freq = F, breaks = 5-)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
n = 10
p = 1/2
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 50)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
n = 100
p = 1/2
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 50)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
n = 1000
p = 1/2
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 50)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
n = 30
p = 0.4
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 50)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
n = 30
p = 0.4
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 50)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
sum(foo <= 10) / length(foo)
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
pnorm(q = 10, mean = n*p, sd = sqrt((1-p)*n*p))
hist(foo, freq = F, breaks = 20, space = 0)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
pnorm(q = 10, mean = n*p, sd = sqrt((1-p)*n*p))
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p+0.5, sd = sqrt((1-p)*n*p)))
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
pnorm(q = 10, mean = n*p, sd = sqrt((1-p)*n*p))
n = 30
p = 0.4
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20, space = 0)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
n = 50
p = 0.4
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
n = 30
p = 0.4
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
n = 30
p = 0.1
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = 30, prob = 0.4, lower.tail = T)
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
pbinom(10, size = n, prob = p, lower.tail = T)
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
pnorm(q = 10, mean = n*p-0.1, sd = sqrt((1-p)*n*p))
n = 5
p = 0.1
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = n, prob = p, lower.tail = T)
pnorm(q = 10, mean = n*p-0.1, sd = sqrt((1-p)*n*p))
n = 500
p = 0.1
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.1, sd = sqrt((1-p)*n*p)))
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = n, prob = p, lower.tail = T)
pnorm(q = 10, mean = n*p-0.1, sd = sqrt((1-p)*n*p))
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
n = 500
p = 0.7
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = n, prob = p, lower.tail = T)
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
n = 30
p = 0.7
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.7, sd = sqrt((1-p)*n*p)))
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.3, sd = sqrt((1-p)*n*p)))
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = n, prob = p, lower.tail = T)
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
n = 30
p = 0.4
foo <- rbinom(10000, n, prob = p )
hist(foo, freq = F, breaks = 20)
# normal approx
lines(x = seq(min(foo), max(foo), length = 100),
y = dnorm(x = seq(min(foo), to = max(foo), length = 100),
mean = n*p-0.5, sd = sqrt((1-p)*n*p)))
lines(density(foo), col = "red")
sum(foo <= 10) / length(foo)
pbinom(10, size = n, prob = p, lower.tail = T)
n*p
pnorm(q = (10-n*p)/sqrt((1-p)*n*p), mean = 0, 1)
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
pnorm(q = 10, mean = n*p, sd = sqrt((1-p)*n*p))
pnorm(q = 10, mean = n*p-0.5, sd = sqrt((1-p)*n*p))
pnorm(q = (10-n*p + 0.5)/sqrt((1-p)*n*p), mean = 0, 1)
pnorm(q = -2/(sqrt(1.08)), mean = 0 , sd = 1)
pnorm(q = -2/(sqrt(1.08)), mean = 0 , sd = 1, lower.tail = F)
pnorm(32, mean = 18, sqrt(12*0.3^2), lower.tail = F)
pgamma(q = 32, shape = 18*18/(0.3^2*12), rate = 18/(0.3^2*12), lower.tail = F)
18/(0.3^2*12)
50/3
18*18/(0.3^2*12)
pgamma(q = 32, shape = 300, rate = 50/3, lower.tail = F)
